// MIT License
//
// Copyright (c) 2025 Eigen
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: oppb/v1/issuer.proto

package oppb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Issuer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *CommonKey             `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Meta          *IssuerMeta            `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	Secret        *IssuerSecret          `protobuf:"bytes,3,opt,name=secret,proto3" json:"secret,omitempty"`
	Attribute     *IssuerAttribute       `protobuf:"bytes,4,opt,name=attribute,proto3" json:"attribute,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Issuer) Reset() {
	*x = Issuer{}
	mi := &file_oppb_v1_issuer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Issuer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Issuer) ProtoMessage() {}

func (x *Issuer) ProtoReflect() protoreflect.Message {
	mi := &file_oppb_v1_issuer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Issuer.ProtoReflect.Descriptor instead.
func (*Issuer) Descriptor() ([]byte, []int) {
	return file_oppb_v1_issuer_proto_rawDescGZIP(), []int{0}
}

func (x *Issuer) GetKey() *CommonKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Issuer) GetMeta() *IssuerMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Issuer) GetSecret() *IssuerSecret {
	if x != nil {
		return x.Secret
	}
	return nil
}

func (x *Issuer) GetAttribute() *IssuerAttribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

type IssuerSecret struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Password      string                 `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssuerSecret) Reset() {
	*x = IssuerSecret{}
	mi := &file_oppb_v1_issuer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssuerSecret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuerSecret) ProtoMessage() {}

func (x *IssuerSecret) ProtoReflect() protoreflect.Message {
	mi := &file_oppb_v1_issuer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuerSecret.ProtoReflect.Descriptor instead.
func (*IssuerSecret) Descriptor() ([]byte, []int) {
	return file_oppb_v1_issuer_proto_rawDescGZIP(), []int{1}
}

func (x *IssuerSecret) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type IssuerResources struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KeyMap        map[string]*KeyRing    `protobuf:"bytes,1,rep,name=key_map,proto3" json:"key_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssuerResources) Reset() {
	*x = IssuerResources{}
	mi := &file_oppb_v1_issuer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssuerResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuerResources) ProtoMessage() {}

func (x *IssuerResources) ProtoReflect() protoreflect.Message {
	mi := &file_oppb_v1_issuer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuerResources.ProtoReflect.Descriptor instead.
func (*IssuerResources) Descriptor() ([]byte, []int) {
	return file_oppb_v1_issuer_proto_rawDescGZIP(), []int{2}
}

func (x *IssuerResources) GetKeyMap() map[string]*KeyRing {
	if x != nil {
		return x.KeyMap
	}
	return nil
}

type KeyRing struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CurrentKeyId   string                 `protobuf:"bytes,1,opt,name=current_key_id,proto3" json:"current_key_id,omitempty"`
	ReservedKeyIds []string               `protobuf:"bytes,2,rep,name=reserved_key_ids,proto3" json:"reserved_key_ids,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *KeyRing) Reset() {
	*x = KeyRing{}
	mi := &file_oppb_v1_issuer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyRing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyRing) ProtoMessage() {}

func (x *KeyRing) ProtoReflect() protoreflect.Message {
	mi := &file_oppb_v1_issuer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyRing.ProtoReflect.Descriptor instead.
func (*KeyRing) Descriptor() ([]byte, []int) {
	return file_oppb_v1_issuer_proto_rawDescGZIP(), []int{3}
}

func (x *KeyRing) GetCurrentKeyId() string {
	if x != nil {
		return x.CurrentKeyId
	}
	return ""
}

func (x *KeyRing) GetReservedKeyIds() []string {
	if x != nil {
		return x.ReservedKeyIds
	}
	return nil
}

type IssuerAttribute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Memo          string                 `protobuf:"bytes,1,opt,name=memo,proto3" json:"memo,omitempty"`
	Owner         string                 `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssuerAttribute) Reset() {
	*x = IssuerAttribute{}
	mi := &file_oppb_v1_issuer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssuerAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuerAttribute) ProtoMessage() {}

func (x *IssuerAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_oppb_v1_issuer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuerAttribute.ProtoReflect.Descriptor instead.
func (*IssuerAttribute) Descriptor() ([]byte, []int) {
	return file_oppb_v1_issuer_proto_rawDescGZIP(), []int{4}
}

func (x *IssuerAttribute) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *IssuerAttribute) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

var File_oppb_v1_issuer_proto protoreflect.FileDescriptor

const file_oppb_v1_issuer_proto_rawDesc = "" +
	"\n" +
	"\x14oppb/v1/issuer.proto\x12\aoppb.v1\x1a\x14oppb/v1/common.proto\x1a\x19oppb/v1/issuer_meta.proto\"\xbe\x01\n" +
	"\x06Issuer\x12$\n" +
	"\x03key\x18\x01 \x01(\v2\x12.oppb.v1.CommonKeyR\x03key\x12'\n" +
	"\x04meta\x18\x02 \x01(\v2\x13.oppb.v1.IssuerMetaR\x04meta\x12-\n" +
	"\x06secret\x18\x03 \x01(\v2\x15.oppb.v1.IssuerSecretR\x06secret\x126\n" +
	"\tattribute\x18\x04 \x01(\v2\x18.oppb.v1.IssuerAttributeR\tattribute\"*\n" +
	"\fIssuerSecret\x12\x1a\n" +
	"\bpassword\x18\x01 \x01(\tR\bpassword\"\x9e\x01\n" +
	"\x0fIssuerResources\x12>\n" +
	"\akey_map\x18\x01 \x03(\v2$.oppb.v1.IssuerResources.KeyMapEntryR\akey_map\x1aK\n" +
	"\vKeyMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12&\n" +
	"\x05value\x18\x02 \x01(\v2\x10.oppb.v1.KeyRingR\x05value:\x028\x01\"]\n" +
	"\aKeyRing\x12&\n" +
	"\x0ecurrent_key_id\x18\x01 \x01(\tR\x0ecurrent_key_id\x12*\n" +
	"\x10reserved_key_ids\x18\x02 \x03(\tR\x10reserved_key_ids\";\n" +
	"\x0fIssuerAttribute\x12\x12\n" +
	"\x04memo\x18\x01 \x01(\tR\x04memo\x12\x14\n" +
	"\x05owner\x18\x02 \x01(\tR\x05ownerB\x91\x01\n" +
	"\vcom.oppb.v1B\vIssuerProtoP\x01Z8github.com/Eigen438/opgo/pkg/auto-generated/oppb/v1;oppb\xa2\x02\x03OXX\xaa\x02\aOppb.V1\xca\x02\aOppb\\V1\xe2\x02\x13Oppb\\V1\\GPBMetadata\xea\x02\bOppb::V1b\x06proto3"

var (
	file_oppb_v1_issuer_proto_rawDescOnce sync.Once
	file_oppb_v1_issuer_proto_rawDescData []byte
)

func file_oppb_v1_issuer_proto_rawDescGZIP() []byte {
	file_oppb_v1_issuer_proto_rawDescOnce.Do(func() {
		file_oppb_v1_issuer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_oppb_v1_issuer_proto_rawDesc), len(file_oppb_v1_issuer_proto_rawDesc)))
	})
	return file_oppb_v1_issuer_proto_rawDescData
}

var file_oppb_v1_issuer_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_oppb_v1_issuer_proto_goTypes = []any{
	(*Issuer)(nil),          // 0: oppb.v1.Issuer
	(*IssuerSecret)(nil),    // 1: oppb.v1.IssuerSecret
	(*IssuerResources)(nil), // 2: oppb.v1.IssuerResources
	(*KeyRing)(nil),         // 3: oppb.v1.KeyRing
	(*IssuerAttribute)(nil), // 4: oppb.v1.IssuerAttribute
	nil,                     // 5: oppb.v1.IssuerResources.KeyMapEntry
	(*CommonKey)(nil),       // 6: oppb.v1.CommonKey
	(*IssuerMeta)(nil),      // 7: oppb.v1.IssuerMeta
}
var file_oppb_v1_issuer_proto_depIdxs = []int32{
	6, // 0: oppb.v1.Issuer.key:type_name -> oppb.v1.CommonKey
	7, // 1: oppb.v1.Issuer.meta:type_name -> oppb.v1.IssuerMeta
	1, // 2: oppb.v1.Issuer.secret:type_name -> oppb.v1.IssuerSecret
	4, // 3: oppb.v1.Issuer.attribute:type_name -> oppb.v1.IssuerAttribute
	5, // 4: oppb.v1.IssuerResources.key_map:type_name -> oppb.v1.IssuerResources.KeyMapEntry
	3, // 5: oppb.v1.IssuerResources.KeyMapEntry.value:type_name -> oppb.v1.KeyRing
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_oppb_v1_issuer_proto_init() }
func file_oppb_v1_issuer_proto_init() {
	if File_oppb_v1_issuer_proto != nil {
		return
	}
	file_oppb_v1_common_proto_init()
	file_oppb_v1_issuer_meta_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_oppb_v1_issuer_proto_rawDesc), len(file_oppb_v1_issuer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_oppb_v1_issuer_proto_goTypes,
		DependencyIndexes: file_oppb_v1_issuer_proto_depIdxs,
		MessageInfos:      file_oppb_v1_issuer_proto_msgTypes,
	}.Build()
	File_oppb_v1_issuer_proto = out.File
	file_oppb_v1_issuer_proto_goTypes = nil
	file_oppb_v1_issuer_proto_depIdxs = nil
}
