// MIT License
//
// Copyright (c) 2025 Eigen
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

syntax = "proto3";

package oppb.v1;

import "oppb/v1/common.proto";
import "oppb/v1/issuer_meta.proto";

option go_package = "github.com/Eigen438/opgo/pkg/auto-generated/oppb/v1;oppb";

message Issuer {
  CommonKey key = 1 [json_name = "key"];
  IssuerMeta meta = 2 [json_name = "meta"];
  IssuerSecret secret = 3 [json_name = "secret"];
  IssuerAttribute attribute = 4 [json_name = "attribute"];
}

message IssuerSecret {
  string password = 1 [json_name = "password"];
}

message IssuerResources {
  map<string, KeyRing> key_map = 1 [json_name = "key_map"];
}

message KeyRing {
  string current_key_id = 1 [json_name = "current_key_id"];
  repeated string reserved_key_ids = 2 [json_name = "reserved_key_ids"];
}

message IssuerAttribute {
  string memo = 1 [json_name = "memo"];
  string owner = 2 [json_name = "owner"];
}
